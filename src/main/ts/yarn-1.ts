import {load, dump} from 'js-yaml'

const kvEntryPattern = /^(\s+)"?([^"]+)"?\s"?([^"]+)"?$/

export const parse = (value: string) => {
    const lines = value.split('\n')
    const _value = lines.map((line) => {
        if (line.startsWith('#')) {
            return ''
        }

        // "@babel/code-frame@^7.0.0", "@babel/code-frame@^7.12.13"
        if (line.length !==0 && line.charAt(0) !== ' ') {
            return `"${line.replaceAll('"', '').slice(0, -1)}":`
        }

        const [,p,k,v]: string[] = line.match(kvEntryPattern) || []
        if (line.match(kvEntryPattern)) {
            return `${p}"${k}": "${v}"`
        }

        return line
    }, '').join('\n')

    return load(_value)
}

export const format = (value: any) => {
    const lines: string[] = dump(value, {
        quotingType: '"',
        flowLevel: -1,
        lineWidth: -1,
        forceQuotes: true
    }).split('\n')
    const _value = lines.map((line) => {
        // "@babel/code-frame@^7.0.0", "@babel/code-frame@^7.12.13"
        if (line.length !==0 && line.charAt(0) !== ' ') {
            const chunks = line.slice(0, -1).replaceAll('"', '').split(', ').map(chunk => chunk.startsWith('@') || chunk.includes(' ') ? `"${chunk}"` : chunk)
            return `\n${chunks.join(', ')}:`
        }

        if (line.startsWith('  integrity')) {
            return line.replace(':', '').replaceAll('"', '')
        }

        if (line.endsWith('ependencies:')) {
            return line
        }

        return line.replace(':', '')
    }, '').join('\n')

    return `# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
# yarn lockfile v1

${_value}`
}
